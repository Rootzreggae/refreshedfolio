---
export interface Props {
  id: string;
  images: {
    src: string;
    alt: string;
  }[];
}

const { id, images } = Astro.props;
---

<div class="comp-carousel" data-carousel-id={id}>
  <div class="carousel-container">
    <div class="carousel-track" id={`carousel-${id}`}>
      {images.map((image) => (
        <div class="carousel-slide">
          <img src={image.src} alt={image.alt} />
        </div>
      ))}
    </div>
  </div>
  <div class="carousel-nav">
    <div class="carousel-dots">
      {images.map((_, index) => (
        <button
          class={`carousel-dot ${index === 0 ? 'active' : ''}`}
          data-slide-index={index}
          aria-label={`Go to slide ${index + 1}`}
        />
      ))}
    </div>
    <span class="carousel-counter">1 / {images.length}</span>
  </div>
</div>

<style>
  .comp-carousel {
    margin: 80px 0;
    position: relative;
  }

  .carousel-container {
    position: relative;
    overflow: hidden;
    background: #0a0a0a;
    border: 1px solid #333;
    border-radius: 8px;
  }

  .carousel-track {
    display: flex;
    transition: transform 0.5s ease;
  }

  .carousel-slide {
    min-width: 100%;
    padding: 40px;
  }

  .carousel-slide img {
    width: 100%;
    height: auto;
    border-radius: 4px;
  }

  .carousel-nav {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 20px;
    margin-top: 24px;
  }

  .carousel-dots {
    display: flex;
    gap: 8px;
  }

  .carousel-dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: #444;
    border: none;
    cursor: pointer;
    transition: background 0.3s;
  }

  .carousel-dot.active {
    background: #fff;
  }

  .carousel-dot:hover:not(.active) {
    background: #666;
  }

  .carousel-counter {
    color: #666;
    font-size: 14px;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const carousels = document.querySelectorAll('.comp-carousel');

    carousels.forEach((carousel) => {
      const id = (carousel as HTMLElement).dataset.carouselId;
      const track = carousel.querySelector('.carousel-track') as HTMLElement;
      const dots = carousel.querySelectorAll('.carousel-dot');
      const counter = carousel.querySelector('.carousel-counter');

      function goToSlide(index: number) {
        if (track) {
          track.style.transform = `translateX(-${index * 100}%)`;
        }

        dots.forEach((dot, i) => {
          dot.classList.toggle('active', i === index);
        });

        if (counter) {
          counter.textContent = `${index + 1} / ${dots.length}`;
        }
      }

      dots.forEach((dot) => {
        dot.addEventListener('click', () => {
          const index = parseInt(dot.getAttribute('data-slide-index') || '0');
          goToSlide(index);
        });
      });
    });
  });
</script>
